{"ast":null,"code":"// frontend/src/components/Chatbot.js\nimport React,{useState}from\"react\";import\"./Chatbot.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const sendMessage=async()=>{if(!input.trim())return;const newMessages=[...messages,{text:input,sender:\"user\"}];setMessages(newMessages);setInput(\"\");try{const response=await fetch(\"http://localhost:5000/api/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({message:input})});if(!response.ok)throw new Error(\"Failed to fetch\");const data=await response.json();setMessages([...newMessages,{text:data.reply,sender:\"bot\"}]);}catch(error){console.error(\"Error:\",error);setMessages([...newMessages,{text:\"⚠️ Failed to connect to the server.\",sender:\"bot\"}]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatbox\",children:messages.map((msg,idx)=>/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.sender===\"user\"?\"user\":\"bot\"}`,children:msg.text},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask me anything...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});}export default Chatbot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","sendMessage","trim","newMessages","text","sender","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","reply","error","console","className","children","map","msg","idx","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/shourish/OneDrive/Documents/python/ai-chatbot-app/frontend/src/components/Chatbot.js"],"sourcesContent":["// frontend/src/components/Chatbot.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to fetch\");\r\n\r\n      const data = await response.json();\r\n\r\n      setMessages([\r\n        ...newMessages,\r\n        { text: data.reply, sender: \"bot\" },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessages([\r\n        ...newMessages,\r\n        { text: \"⚠️ Failed to connect to the server.\", sender: \"bot\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbox\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Ask me anything...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAU,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAE,OAEnB,KAAM,CAAAC,WAAW,CAAG,CAAC,GAAGN,QAAQ,CAAE,CAAEO,IAAI,CAAEL,KAAK,CAAEM,MAAM,CAAE,MAAO,CAAC,CAAC,CAClEP,WAAW,CAACK,WAAW,CAAC,CACxBH,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAI,CACF,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAE,CAC7DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEd,KAAM,CAAC,CACzC,CAAC,CAAC,CAEF,GAAI,CAACO,QAAQ,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiB,CAAC,CAEpD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAElCnB,WAAW,CAAC,CACV,GAAGK,WAAW,CACd,CAAEC,IAAI,CAAEY,IAAI,CAACE,KAAK,CAAEb,MAAM,CAAE,KAAM,CAAC,CACpC,CAAC,CACJ,CAAE,MAAOc,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9BrB,WAAW,CAAC,CACV,GAAGK,WAAW,CACd,CAAEC,IAAI,CAAE,qCAAqC,CAAEC,MAAM,CAAE,KAAM,CAAC,CAC/D,CAAC,CACJ,CACF,CAAC,CAED,mBACEV,KAAA,QAAK0B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC7B,IAAA,QAAK4B,SAAS,CAAC,SAAS,CAAAC,QAAA,CACrBzB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,GAAG,CAAEC,GAAG,gBACrBhC,IAAA,QAEE4B,SAAS,CAAE,WAAWG,GAAG,CAACnB,MAAM,GAAK,MAAM,CAAG,MAAM,CAAG,KAAK,EAAG,CAAAiB,QAAA,CAE9DE,GAAG,CAACpB,IAAI,EAHJqB,GAIF,CACN,CAAC,CACC,CAAC,cACN9B,KAAA,QAAK0B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB7B,IAAA,UACEiC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE5B,KAAM,CACb6B,QAAQ,CAAGC,CAAC,EAAK7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,oBAAoB,CACjC,CAAC,cACFtC,IAAA,WAAQuC,OAAO,CAAE/B,WAAY,CAAAqB,QAAA,CAAC,MAAI,CAAQ,CAAC,EACxC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAA1B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}