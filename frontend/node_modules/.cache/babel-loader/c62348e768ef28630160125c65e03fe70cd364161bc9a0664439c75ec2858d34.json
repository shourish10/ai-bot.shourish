{"ast":null,"code":"import React, { useState } from 'react';\nimport './Chatbot.css';\nconst sendMessage = async () => {\n  if (!input) return;\n  const newMessages = [...messages, {\n    text: input,\n    sender: \"user\"\n  }];\n  setMessages(newMessages);\n  setInput(\"\");\n  try {\n    const response = await fetch(\"http://localhost:5000/api/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    const data = await response.json();\n    setMessages([...newMessages, {\n      text: data.reply,\n      sender: \"bot\"\n    }]);\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n    setMessages([...newMessages, {\n      text: \"⚠️ Failed to connect to the server.\",\n      sender: \"bot\"\n    }]);\n  }\n};","map":{"version":3,"names":["React","useState","sendMessage","input","newMessages","messages","text","sender","setMessages","setInput","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","reply","error","console"],"sources":["C:/Users/shourish/OneDrive/Documents/python/ai-chatbot-app/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst sendMessage = async () => {\r\n  if (!input) return;\r\n\r\n  const newMessages = [...messages, { text: input, sender: \"user\" }];\r\n  setMessages(newMessages);\r\n  setInput(\"\");\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/chat\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ message: input }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Network response was not ok\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    setMessages([...newMessages, { text: data.reply, sender: \"bot\" }]);\r\n  } catch (error) {\r\n    console.error(\"Error sending message:\", error);\r\n    setMessages([\r\n      ...newMessages,\r\n      { text: \"⚠️ Failed to connect to the server.\", sender: \"bot\" },\r\n    ]);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAEtB,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI,CAACC,KAAK,EAAE;EAEZ,MAAMC,WAAW,GAAG,CAAC,GAAGC,QAAQ,EAAE;IAAEC,IAAI,EAAEH,KAAK;IAAEI,MAAM,EAAE;EAAO,CAAC,CAAC;EAClEC,WAAW,CAACJ,WAAW,CAAC;EACxBK,QAAQ,CAAC,EAAE,CAAC;EAEZ,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEd;MAAM,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAElCb,WAAW,CAAC,CAAC,GAAGJ,WAAW,EAAE;MAAEE,IAAI,EAAEc,IAAI,CAACE,KAAK;MAAEf,MAAM,EAAE;IAAM,CAAC,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9Cf,WAAW,CAAC,CACV,GAAGJ,WAAW,EACd;MAAEE,IAAI,EAAE,qCAAqC;MAAEC,MAAM,EAAE;IAAM,CAAC,CAC/D,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}